<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.domain.post.PostMapper">

    <!-- tb_post 테이블 전체 컬럼 -->
    <sql id="postColumns">
        id
        , title
        , content
        , writer
        , view_cnt
        , notice_yn
        , delete_yn
        , type  <!-- 게시판 유형 추가 -->
        , created_date
        , modified_date
    </sql>

    <select id="findAll" parameterType="com.study.common.dto.SearchDto" resultType="com.study.domain.post.PostResponse">
        SELECT *
        FROM tb_post
        WHERE delete_yn = 0
          AND type = #{type}
        ORDER BY id DESC
            LIMIT #{pagination.limitStart}, #{recordSize}
    </select>


    <!-- 게시글 저장 -->
    <insert id="save" parameterType="com.study.domain.post.PostRequest" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO tb_post (
        id,
        title,
        content,
        writer,
        view_cnt,
        notice_yn,
        delete_yn,
        type,  <!-- 게시판 유형 추가 -->
        created_date,
        modified_date
        ) VALUES (
        #{id},
        #{title},
        #{content},
        #{writer},
        0,
        #{noticeYn},
        0,
        #{type},  <!-- 게시판 유형 저장 -->
        NOW(),
        NULL
        )
    </insert>


    <!-- 게시글 상세정보 조회 -->
    <select id="findById" parameterType="long" resultType="com.study.domain.post.PostResponse">
        SELECT
        <include refid="postColumns" />
        FROM
        tb_post
        WHERE
        id = #{value}
    </select>

    <!-- 게시글 수정 -->
    <update id="update" parameterType="com.study.domain.post.PostRequest">
        UPDATE tb_post
        SET
        modified_date = NOW()
        , title = #{title}
        , content = #{content}
        , writer = #{writer}
        , notice_yn = #{noticeYn}
        , type = #{type}  <!-- 게시판 유형 수정 -->
        WHERE
        id = #{id}
    </update>

    <!-- 게시글 삭제 -->
    <delete id="deleteById" parameterType="long">
        UPDATE tb_post
        SET
            delete_yn = 1
        WHERE
            id = #{id}
    </delete>

    <!-- 게시글 수 카운팅 -->
    <select id="count" parameterType="com.study.common.dto.SearchDto" resultType="int">
        SELECT
        COUNT(*)
        FROM
        tb_post
        WHERE
        delete_yn = 0
        AND type = #{type} <!-- 게시판 유형 조건 추가 -->
    </select>

</mapper>
